#!/bin/bash
#
# douane      This shell script takes care of starting and stopping
#             douane daemon (A modern applicatif firewall)
#
# Author: Guillaume Hain zedtux@zedroot.org
#
# description: douane is the daemon process of the Douane firewall application. \
# This firewall is limiting access to the internet on application bases.

# Source function library.
. /lib/lsb/init-functions

NAME=douaned
DOUANEDIR=/opt/douane
DAEMON=$DOUANEDIR/$NAME
PIDDIR=$DOUANEDIR/pids
PIDFILE=$PIDDIR/$NAME.pid
STARTPIDFILE=$DOUANEDIR/logs/startpid
CURRENT_KERNEL_VERSION=`uname -r`
CURRENT_KERNEL_VERSION_SHORT=`uname -r | cut -d "-" -f1`
KERNEL_MODULES_PATH="/opt/douane/lkms"
CURRENT_KERNEL_VERSION_PATH="/lib/modules/$CURRENT_KERNEL_VERSION/updates/dkms"

verlte() {
    [ "$1" = "$2" ] && return 1 || [  "$2" = "`echo -e "$1\n$2" | sort -V | head -n1`" ]
}

verlt() {
    [ "$1" = "$2" ] && return 1 || verlte $2 $1
}

link_kernel_module_to_current_kernel()
{
    verlt $CURRENT_KERNEL_VERSION_SHORT 3.6.0 && DOUANE_KERNEL_MODULE_VERSION="3.5"
    [[ "$CURRENT_KERNEL_VERSION_SHORT" == 3.6.* ]] && DOUANE_KERNEL_MODULE_VERSION="3.6"
    [[ "$CURRENT_KERNEL_VERSION_SHORT" == 3.7.* ]] && DOUANE_KERNEL_MODULE_VERSION="3.7"
    [[ "$CURRENT_KERNEL_VERSION_SHORT" == 3.8.* ]] && DOUANE_KERNEL_MODULE_VERSION="3.8"
    [[ "$CURRENT_KERNEL_VERSION_SHORT" == 3.9.* ]] && DOUANE_KERNEL_MODULE_VERSION="3.9"
    verlte $CURRENT_KERNEL_VERSION_SHORT 3.9.999 && DOUANE_KERNEL_MODULE_VERSION="3.10"

    echo "Linking douane kernel module version $DOUANE_KERNEL_MODULE_VERSION." >> /var/log/douane.log
    ln -s "$KERNEL_MODULES_PATH/douane_$DOUANE_KERNEL_MODULE_VERSION.ko" "$CURRENT_KERNEL_VERSION_PATH/douane.ko"
}

case "$1" in
    start)
        # Install and Load the kernel module if not already done
        if [ -z "$(lsmod | grep douane)" ]; then
            # After a kernel upgrade we link the kernel module to the new kernel
            [[ ! -d "$CURRENT_KERNEL_VERSION_PATH" ]] && mkdir -p "$CURRENT_KERNEL_VERSION_PATH"
            # In the case of missing douane kernel module link in the current kernel
            if [ ! -f "$CURRENT_KERNEL_VERSION_PATH/douane.ko" ]; then
                # Link the right kernel module to the current kernel
                link_kernel_module_to_current_kernel

                # Now update the kernel modules list
                depmod -a
            fi
            # Now load the kernel module
            modprobe douane
        fi
        log_daemon_msg "Starting the $NAME daemon"
        # Creating the pids folder is not existing
        if [ ! -e $PIDDIR ]; then
            mkdir $PIDDIR
            chown root $PIDDIR
        fi
        FULL_COMMAND="start-stop-daemon --start --oknodo --startas $DAEMON --make-pidfile --background --umask 0 --nicelevel -20 --pidfile $PIDFILE -- --debug"
        if [ x"$DAEMON_USER" != x ]; then
            sudo -u $DAEMON_USER $FULL_COMMAND
        else
            $FULL_COMMAND
        fi
        log_end_msg $?
        ;;
    stop)
        log_daemon_msg "Stopping $NAME daemon"
        start-stop-daemon --retry 30 --stop --pidfile $PIDFILE
        if [ -a $PIDFILE ]; then rm $PIDFILE; fi;
        log_end_msg $?
        ;;
    status)
        status_of_proc $DAEMON $NAME
        ;;
    restart)
        stop
        start
        ;;
    installautostart)
        if [ -z "$(grep "modprobe douane" /etc/rc.local)" ]; then
            sed 's/^exit 0/modprobe douane\n&/' /etc/rc.local | tee /tmp/rc.local;
            cp /tmp/rc.local /etc;
            rm /tmp/rc.local;
        fi
        ;;
    uninstallautostart)
        if [ -n "$(grep "modprobe douane" /etc/rc.local)" ]; then
            sed '/^modprobe douane/d' /etc/rc.local | tee /tmp/rc.local;
            cp /tmp/rc.local /etc;
            rm /tmp/rc.local;
        fi
        ;;
    *)
        echo "Unknown argument -- $1"
        echo "Usage:  {start|stop|status|restart}"
        exit 1
        ;;
esac
exit $?
